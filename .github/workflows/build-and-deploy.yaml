# Simple workflow for deploying static content to GitHub Pages
#name: Deploy static content to Pages
#
#on:
#  # Runs on pushes targeting the default branch
#  push:
#    branches:
#      - dev
#  pull_request:
#    branches:
#      - dev
#
## Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
#permissions:
#  contents: read
#  pages: write
#  id-token: write
#
## Allow one concurrent deployment
#concurrency:
#  group: 'pages'
#  cancel-in-progress: true

#jobs:
#  # Single deploy job since we're just deploying
#  deploy:
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set up Node
#        uses: actions/setup-node@v3
#        with:
#          node-version: 18
#          cache: 'npm'
#      - name: Install dependencies
#        run: npm install
#      - name: Build
#        run: npm run build
#      - name: Setup Pages
#        uses: actions/configure-pages@v3
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v1
#        with:
#          # Upload dist repository
#          path: './dist'
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v1
#


name: Deploy Docker image

on:
  push:
    branches:
      - dev
      - ci-check
  pull_request:
    branches:
      - dev

jobs:
  BuildImage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/bv-medsi/bv-front:${{ github.ref_name }}
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }}; docker run --rm -v "/srv/frontend:/ext_folder" ghcr.io/bv-medsi/bv-front:${{ github.ref_name }} bash -c "cp -R dist /ext_folder"
